vendor_name = ModelSim
source_file = 1, I:/NEW_MULTIPLIER/ripple_adder.sv
source_file = 1, I:/NEW_MULTIPLIER/reg_8.sv
source_file = 1, I:/NEW_MULTIPLIER/multiplier.sv
source_file = 1, I:/NEW_MULTIPLIER/HexDriver.sv
source_file = 1, I:/NEW_MULTIPLIER/full_adder.sv
source_file = 1, I:/NEW_MULTIPLIER/counter.sv
source_file = 1, I:/NEW_MULTIPLIER/control.sv
source_file = 1, I:/NEW_MULTIPLIER/db/multiplier.cbx.xml
design_name = multiplier
instance = comp, \AhexU[0]~output , AhexU[0]~output, multiplier, 1
instance = comp, \AhexU[1]~output , AhexU[1]~output, multiplier, 1
instance = comp, \AhexU[2]~output , AhexU[2]~output, multiplier, 1
instance = comp, \AhexU[3]~output , AhexU[3]~output, multiplier, 1
instance = comp, \AhexU[4]~output , AhexU[4]~output, multiplier, 1
instance = comp, \AhexU[5]~output , AhexU[5]~output, multiplier, 1
instance = comp, \AhexU[6]~output , AhexU[6]~output, multiplier, 1
instance = comp, \AhexL[0]~output , AhexL[0]~output, multiplier, 1
instance = comp, \AhexL[1]~output , AhexL[1]~output, multiplier, 1
instance = comp, \AhexL[2]~output , AhexL[2]~output, multiplier, 1
instance = comp, \AhexL[3]~output , AhexL[3]~output, multiplier, 1
instance = comp, \AhexL[4]~output , AhexL[4]~output, multiplier, 1
instance = comp, \AhexL[5]~output , AhexL[5]~output, multiplier, 1
instance = comp, \AhexL[6]~output , AhexL[6]~output, multiplier, 1
instance = comp, \BhexU[0]~output , BhexU[0]~output, multiplier, 1
instance = comp, \BhexU[1]~output , BhexU[1]~output, multiplier, 1
instance = comp, \BhexU[2]~output , BhexU[2]~output, multiplier, 1
instance = comp, \BhexU[3]~output , BhexU[3]~output, multiplier, 1
instance = comp, \BhexU[4]~output , BhexU[4]~output, multiplier, 1
instance = comp, \BhexU[5]~output , BhexU[5]~output, multiplier, 1
instance = comp, \BhexU[6]~output , BhexU[6]~output, multiplier, 1
instance = comp, \BhexL[0]~output , BhexL[0]~output, multiplier, 1
instance = comp, \BhexL[1]~output , BhexL[1]~output, multiplier, 1
instance = comp, \BhexL[2]~output , BhexL[2]~output, multiplier, 1
instance = comp, \BhexL[3]~output , BhexL[3]~output, multiplier, 1
instance = comp, \BhexL[4]~output , BhexL[4]~output, multiplier, 1
instance = comp, \BhexL[5]~output , BhexL[5]~output, multiplier, 1
instance = comp, \BhexL[6]~output , BhexL[6]~output, multiplier, 1
instance = comp, \Aval[0]~output , Aval[0]~output, multiplier, 1
instance = comp, \Aval[1]~output , Aval[1]~output, multiplier, 1
instance = comp, \Aval[2]~output , Aval[2]~output, multiplier, 1
instance = comp, \Aval[3]~output , Aval[3]~output, multiplier, 1
instance = comp, \Aval[4]~output , Aval[4]~output, multiplier, 1
instance = comp, \Aval[5]~output , Aval[5]~output, multiplier, 1
instance = comp, \Aval[6]~output , Aval[6]~output, multiplier, 1
instance = comp, \Aval[7]~output , Aval[7]~output, multiplier, 1
instance = comp, \Bval[0]~output , Bval[0]~output, multiplier, 1
instance = comp, \Bval[1]~output , Bval[1]~output, multiplier, 1
instance = comp, \Bval[2]~output , Bval[2]~output, multiplier, 1
instance = comp, \Bval[3]~output , Bval[3]~output, multiplier, 1
instance = comp, \Bval[4]~output , Bval[4]~output, multiplier, 1
instance = comp, \Bval[5]~output , Bval[5]~output, multiplier, 1
instance = comp, \Bval[6]~output , Bval[6]~output, multiplier, 1
instance = comp, \Bval[7]~output , Bval[7]~output, multiplier, 1
instance = comp, \X~output , X~output, multiplier, 1
instance = comp, \Clk~input , Clk~input, multiplier, 1
instance = comp, \Clk~inputclkctrl , Clk~inputclkctrl, multiplier, 1
instance = comp, \Run~input , Run~input, multiplier, 1
instance = comp, \Reset~input , Reset~input, multiplier, 1
instance = comp, \control_unit|curr_state.S_Reset , control_unit|curr_state.S_Reset, multiplier, 1
instance = comp, \ClearA_LoadB~input , ClearA_LoadB~input, multiplier, 1
instance = comp, \control_unit|curr_state~20 , control_unit|curr_state~20, multiplier, 1
instance = comp, \control_unit|curr_state.S_ClearALoadB , control_unit|curr_state.S_ClearALoadB, multiplier, 1
instance = comp, \control_unit|COUNTER|Count~2 , control_unit|COUNTER|Count~2, multiplier, 1
instance = comp, \control_unit|WideOr2 , control_unit|WideOr2, multiplier, 1
instance = comp, \control_unit|COUNTER|Count~0 , control_unit|COUNTER|Count~0, multiplier, 1
instance = comp, \control_unit|COUNTER|Count[2] , control_unit|COUNTER|Count[2], multiplier, 1
instance = comp, \control_unit|Equal1~0 , control_unit|Equal1~0, multiplier, 1
instance = comp, \control_unit|COUNTER|Count~4 , control_unit|COUNTER|Count~4, multiplier, 1
instance = comp, \control_unit|COUNTER|Count[3] , control_unit|COUNTER|Count[3], multiplier, 1
instance = comp, \B_REG|Data_Out[7]~0 , B_REG|Data_Out[7]~0, multiplier, 1
instance = comp, \Switch[4]~input , Switch[4]~input, multiplier, 1
instance = comp, \control_unit|WideOr2~0 , control_unit|WideOr2~0, multiplier, 1
instance = comp, \Switch[6]~input , Switch[6]~input, multiplier, 1
instance = comp, \Switch[7]~input , Switch[7]~input, multiplier, 1
instance = comp, \control_unit|curr_state~19 , control_unit|curr_state~19, multiplier, 1
instance = comp, \control_unit|curr_state.S_Add , control_unit|curr_state.S_Add, multiplier, 1
instance = comp, \A_REG|Data_Out[4]~0 , A_REG|Data_Out[4]~0, multiplier, 1
instance = comp, \Switch[3]~input , Switch[3]~input, multiplier, 1
instance = comp, \Switch[2]~input , Switch[2]~input, multiplier, 1
instance = comp, \Switch[1]~input , Switch[1]~input, multiplier, 1
instance = comp, \Switch[0]~input , Switch[0]~input, multiplier, 1
instance = comp, \ADDER|FA0|c~0 , ADDER|FA0|c~0, multiplier, 1
instance = comp, \ADDER|FA1|c~0 , ADDER|FA1|c~0, multiplier, 1
instance = comp, \ADDER|FA2|c~0 , ADDER|FA2|c~0, multiplier, 1
instance = comp, \ADDER|FA3|c~0 , ADDER|FA3|c~0, multiplier, 1
instance = comp, \ADDER|FA4|s~0 , ADDER|FA4|s~0, multiplier, 1
instance = comp, \A_REG|Data_Out~1 , A_REG|Data_Out~1, multiplier, 1
instance = comp, \A_REG|Data_Out[4]~2 , A_REG|Data_Out[4]~2, multiplier, 1
instance = comp, \A_REG|Data_Out[4] , A_REG|Data_Out[4], multiplier, 1
instance = comp, \ADDER|FA3|s~0 , ADDER|FA3|s~0, multiplier, 1
instance = comp, \A_REG|Data_Out~9 , A_REG|Data_Out~9, multiplier, 1
instance = comp, \A_REG|Data_Out[3] , A_REG|Data_Out[3], multiplier, 1
instance = comp, \ADDER|FA2|s~0 , ADDER|FA2|s~0, multiplier, 1
instance = comp, \A_REG|Data_Out~8 , A_REG|Data_Out~8, multiplier, 1
instance = comp, \A_REG|Data_Out[2] , A_REG|Data_Out[2], multiplier, 1
instance = comp, \ADDER|FA1|s , ADDER|FA1|s, multiplier, 1
instance = comp, \A_REG|Data_Out~7 , A_REG|Data_Out~7, multiplier, 1
instance = comp, \A_REG|Data_Out[1] , A_REG|Data_Out[1], multiplier, 1
instance = comp, \ADDER|FA0|s~0 , ADDER|FA0|s~0, multiplier, 1
instance = comp, \A_REG|Data_Out~6 , A_REG|Data_Out~6, multiplier, 1
instance = comp, \A_REG|Data_Out[0] , A_REG|Data_Out[0], multiplier, 1
instance = comp, \B_REG|Data_Out~5 , B_REG|Data_Out~5, multiplier, 1
instance = comp, \B_REG|Data_Out[7]~2 , B_REG|Data_Out[7]~2, multiplier, 1
instance = comp, \B_REG|Data_Out[7] , B_REG|Data_Out[7], multiplier, 1
instance = comp, \B_REG|Data_Out~4 , B_REG|Data_Out~4, multiplier, 1
instance = comp, \B_REG|Data_Out[6] , B_REG|Data_Out[6], multiplier, 1
instance = comp, \Switch[5]~input , Switch[5]~input, multiplier, 1
instance = comp, \B_REG|Data_Out~3 , B_REG|Data_Out~3, multiplier, 1
instance = comp, \B_REG|Data_Out[5] , B_REG|Data_Out[5], multiplier, 1
instance = comp, \B_REG|Data_Out~1 , B_REG|Data_Out~1, multiplier, 1
instance = comp, \B_REG|Data_Out[4] , B_REG|Data_Out[4], multiplier, 1
instance = comp, \B_REG|Data_Out~9 , B_REG|Data_Out~9, multiplier, 1
instance = comp, \B_REG|Data_Out[3] , B_REG|Data_Out[3], multiplier, 1
instance = comp, \B_REG|Data_Out~8 , B_REG|Data_Out~8, multiplier, 1
instance = comp, \B_REG|Data_Out[2] , B_REG|Data_Out[2], multiplier, 1
instance = comp, \B_REG|Data_Out~7 , B_REG|Data_Out~7, multiplier, 1
instance = comp, \B_REG|Data_Out[1] , B_REG|Data_Out[1], multiplier, 1
instance = comp, \B_REG|Data_Out~6 , B_REG|Data_Out~6, multiplier, 1
instance = comp, \B_REG|Data_Out[0] , B_REG|Data_Out[0], multiplier, 1
instance = comp, \control_unit|curr_state~16 , control_unit|curr_state~16, multiplier, 1
instance = comp, \control_unit|curr_state.S_Prep , control_unit|curr_state.S_Prep, multiplier, 1
instance = comp, \control_unit|curr_state~12 , control_unit|curr_state~12, multiplier, 1
instance = comp, \control_unit|curr_state~13 , control_unit|curr_state~13, multiplier, 1
instance = comp, \control_unit|curr_state.S_Subtract , control_unit|curr_state.S_Subtract, multiplier, 1
instance = comp, \control_unit|curr_state~17 , control_unit|curr_state~17, multiplier, 1
instance = comp, \control_unit|curr_state~18 , control_unit|curr_state~18, multiplier, 1
instance = comp, \control_unit|curr_state.S_Shift , control_unit|curr_state.S_Shift, multiplier, 1
instance = comp, \control_unit|COUNTER|Count[0]~1 , control_unit|COUNTER|Count[0]~1, multiplier, 1
instance = comp, \control_unit|COUNTER|Count[0] , control_unit|COUNTER|Count[0], multiplier, 1
instance = comp, \control_unit|COUNTER|Count~3 , control_unit|COUNTER|Count~3, multiplier, 1
instance = comp, \control_unit|COUNTER|Count[1] , control_unit|COUNTER|Count[1], multiplier, 1
instance = comp, \control_unit|Equal0~0 , control_unit|Equal0~0, multiplier, 1
instance = comp, \control_unit|curr_state~14 , control_unit|curr_state~14, multiplier, 1
instance = comp, \control_unit|curr_state~15 , control_unit|curr_state~15, multiplier, 1
instance = comp, \control_unit|curr_state.S_Init , control_unit|curr_state.S_Init, multiplier, 1
instance = comp, \control_unit|Selector3~0 , control_unit|Selector3~0, multiplier, 1
instance = comp, \control_unit|Selector3~1 , control_unit|Selector3~1, multiplier, 1
instance = comp, \ADDER|FA4|c~0 , ADDER|FA4|c~0, multiplier, 1
instance = comp, \ADDER|FA5|c~0 , ADDER|FA5|c~0, multiplier, 1
instance = comp, \ADDER|FA6|c~0 , ADDER|FA6|c~0, multiplier, 1
instance = comp, \ADDER|FA7|s~0 , ADDER|FA7|s~0, multiplier, 1
instance = comp, \ADDER|FA7|c~0 , ADDER|FA7|c~0, multiplier, 1
instance = comp, \A_REG|Data_Out~5 , A_REG|Data_Out~5, multiplier, 1
instance = comp, \A_REG|Data_Out[7] , A_REG|Data_Out[7], multiplier, 1
instance = comp, \ADDER|FA6|s~0 , ADDER|FA6|s~0, multiplier, 1
instance = comp, \A_REG|Data_Out~4 , A_REG|Data_Out~4, multiplier, 1
instance = comp, \A_REG|Data_Out[6] , A_REG|Data_Out[6], multiplier, 1
instance = comp, \ADDER|FA5|s~0 , ADDER|FA5|s~0, multiplier, 1
instance = comp, \A_REG|Data_Out~3 , A_REG|Data_Out~3, multiplier, 1
instance = comp, \A_REG|Data_Out[5] , A_REG|Data_Out[5], multiplier, 1
instance = comp, \HexAU|WideOr6~0 , HexAU|WideOr6~0, multiplier, 1
instance = comp, \HexAU|WideOr5~0 , HexAU|WideOr5~0, multiplier, 1
instance = comp, \HexAU|WideOr4~0 , HexAU|WideOr4~0, multiplier, 1
instance = comp, \HexAU|WideOr3~0 , HexAU|WideOr3~0, multiplier, 1
instance = comp, \HexAU|WideOr2~0 , HexAU|WideOr2~0, multiplier, 1
instance = comp, \HexAU|WideOr1~0 , HexAU|WideOr1~0, multiplier, 1
instance = comp, \HexAU|WideOr0~0 , HexAU|WideOr0~0, multiplier, 1
instance = comp, \HexAL|WideOr6~0 , HexAL|WideOr6~0, multiplier, 1
instance = comp, \HexAL|WideOr5~0 , HexAL|WideOr5~0, multiplier, 1
instance = comp, \HexAL|WideOr4~0 , HexAL|WideOr4~0, multiplier, 1
instance = comp, \HexAL|WideOr3~0 , HexAL|WideOr3~0, multiplier, 1
instance = comp, \HexAL|WideOr2~0 , HexAL|WideOr2~0, multiplier, 1
instance = comp, \HexAL|WideOr1~0 , HexAL|WideOr1~0, multiplier, 1
instance = comp, \HexAL|WideOr0~0 , HexAL|WideOr0~0, multiplier, 1
instance = comp, \HexBU|WideOr6~0 , HexBU|WideOr6~0, multiplier, 1
instance = comp, \HexBU|WideOr5~0 , HexBU|WideOr5~0, multiplier, 1
instance = comp, \HexBU|WideOr4~0 , HexBU|WideOr4~0, multiplier, 1
instance = comp, \HexBU|WideOr3~0 , HexBU|WideOr3~0, multiplier, 1
instance = comp, \HexBU|WideOr2~0 , HexBU|WideOr2~0, multiplier, 1
instance = comp, \HexBU|WideOr1~0 , HexBU|WideOr1~0, multiplier, 1
instance = comp, \HexBU|WideOr0~0 , HexBU|WideOr0~0, multiplier, 1
instance = comp, \HexBL|WideOr6~0 , HexBL|WideOr6~0, multiplier, 1
instance = comp, \HexBL|WideOr5~0 , HexBL|WideOr5~0, multiplier, 1
instance = comp, \HexBL|WideOr4~0 , HexBL|WideOr4~0, multiplier, 1
instance = comp, \HexBL|WideOr3~0 , HexBL|WideOr3~0, multiplier, 1
instance = comp, \HexBL|WideOr2~0 , HexBL|WideOr2~0, multiplier, 1
instance = comp, \HexBL|WideOr1~0 , HexBL|WideOr1~0, multiplier, 1
instance = comp, \HexBL|WideOr0~0 , HexBL|WideOr0~0, multiplier, 1
